{"version":3,"file":"Deferred.js","sources":["../node_modules/port-authority/dist/port-authority.esm.js","../src/api/utils/Deferred.ts"],"sourcesContent":["import { connect, createConnection, createServer } from 'net';\n\nvar promise;\nfunction weird() {\n    if (!promise) {\n        promise = get_weird(9000);\n    }\n    return promise;\n}\nfunction get_weird(port) {\n    return new Promise(function (fulfil) {\n        var server = createServer();\n        server.unref();\n        server.on('error', function () {\n            fulfil(get_weird(port + 1));\n        });\n        server.listen({ port: port }, function () {\n            var server2 = createServer();\n            server2.unref();\n            server2.on('error', function () {\n                server.close(function () {\n                    fulfil(false);\n                });\n            });\n            server2.listen({ port: port }, function () {\n                server2.close(function () {\n                    server.close(function () {\n                        fulfil(true);\n                    });\n                });\n            });\n        });\n    });\n}\n\nfunction check(port) {\n    return weird().then(function (weird$$1) {\n        if (weird$$1) {\n            return check_weird(port);\n        }\n        return new Promise(function (fulfil) {\n            var server = createServer();\n            server.unref();\n            server.on('error', function () {\n                fulfil(false);\n            });\n            server.listen({ port: port }, function () {\n                server.close(function () {\n                    fulfil(true);\n                });\n            });\n        });\n    });\n}\nfunction check_weird(port) {\n    return new Promise(function (fulfil) {\n        var client = createConnection({ port: port }, function () {\n            client.end();\n            fulfil(false);\n        })\n            .on('error', function () {\n            fulfil(true);\n        });\n    });\n}\n\nfunction find(port) {\n    return weird().then(function (weird$$1) {\n        if (weird$$1) {\n            return new Promise(function (fulfil) {\n                get_port_weird(port, fulfil);\n            });\n        }\n        return new Promise(function (fulfil) {\n            get_port(port, fulfil);\n        });\n    });\n}\nfunction get_port(port, cb) {\n    var server = createServer();\n    server.unref();\n    server.on('error', function () {\n        get_port(port + 1, cb);\n    });\n    server.listen({ port: port }, function () {\n        server.close(function () {\n            cb(port);\n        });\n    });\n}\nfunction get_port_weird(port, cb) {\n    var client = createConnection({ port: port }, function () {\n        client.end();\n        get_port(port + 1, cb);\n    })\n        .on('error', function () {\n        cb(port);\n    });\n}\n\nfunction wait(port, _a) {\n    var _b = (_a === void 0 ? {} : _a).timeout, timeout = _b === void 0 ? 5000 : _b;\n    return new Promise(function (fulfil, reject) {\n        var t = setTimeout(function () {\n            reject(new Error(\"timed out waiting for connection\"));\n        }, timeout);\n        get_connection(port, function () {\n            clearTimeout(t);\n            fulfil();\n        });\n    });\n}\nfunction get_connection(port, cb) {\n    var timeout;\n    var socket = connect(port, 'localhost', function () {\n        cb();\n        socket.destroy();\n        clearTimeout(timeout);\n    });\n    socket.on('error', function () {\n        clearTimeout(timeout);\n        setTimeout(function () {\n            get_connection(port, cb);\n        }, 10);\n    });\n    timeout = setTimeout(function () {\n        socket.destroy();\n    }, 5000);\n}\n\nexport { check, find, wait };\n","export default class Deferred {\n\tpromise: Promise<any>;\n\tfulfil: (value?: any) => void;\n\treject: (error: Error) => void;\n\n\tconstructor() {\n\t\tthis.promise = new Promise((fulfil, reject) => {\n\t\t\tthis.fulfil = fulfil;\n\t\t\tthis.reject = reject;\n\t\t});\n\t}\n}"],"names":[],"mappings}